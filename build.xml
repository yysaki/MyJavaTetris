<?xml version="1.0" encoding="Shift_JIS" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="MyJavaTetris">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
	<!-- add 20120730 -->
	<property name="junit.jar" location="vender/org.junit_4.8.1.v4_8_1_v20100427-1100/junit.jar"/>
	<property name="core.jar" location="vender/org.hamcrest.core_1.1.0.v20090501071000.jar"/>
	<property name="bin.dir" location="bin"/>
	<property name="doc.dir" location="doc"/>
	<property name="index.dir" location="index"/>
	<property name="test.xml.dir" location="${bin.dir}/test-results"/>
	<path id="project.classpath">
        <pathelement location="${junit.jar}"/>
        <pathelement location="${core.jar}"/>
        <pathelement location="${bin.dir}"/>
        <path refid="JUnit 4.libraryclasspath"/>
	</path>	
	<!-- added -->
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${junit.jar}"/>
        <pathelement location="${core.jar}"/>
    </path>
    <path id="MyJavaTetris.classpath">
        <pathelement location="${bin.dir}"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="res">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}" encoding="Shift_JIS">
            <src path="src"/>
            <classpath refid="MyJavaTetris.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}" encoding="Shift_JIS">
            <src path="res"/>
            <classpath refid="MyJavaTetris.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="Main" depends="build">
        <java classname="myJavaTetris.yysaki.com.Main" failonerror="true" fork="yes">
            <classpath refid="MyJavaTetris.classpath"/>
        </java>
    </target>
	<target name="test" depends="build">
        <delete dir="${test.xml.dir}" />
        <mkdir  dir="${test.xml.dir}" />
        <junit errorProperty="test.failed" failureProperty="test.failed">
            <classpath refid="project.classpath" />
            <formatter type="brief" usefile="false" />
            <formatter type="xml" />
            <batchtest todir="${test.xml.dir}">
                <fileset dir="${bin.dir}" includes="**/*Test.class" />
            </batchtest>
            <sysproperty key="doc.dir" value="${doc.dir}" />
            <sysproperty key="index.dir" value="${index.dir}" />
        </junit>
        <fail message="Tests failed! Check test reports."
                if="test.failed" />
</target>
	<!-- added -->
</project>
